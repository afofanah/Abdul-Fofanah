//Apriori.m

function [rules_left, rules_right] = Apriori(dataset, min_sup, min_conf)%Apriori?????????????????????? 
 
%----------????----------% 
literals = unique(dataset);%??????????????0 
L1 = zeros(0,1);%1-????? 
supports = zeros(0,1);%?????????????? 
L = zeros(0,size(literals,1));%????? 
kborder = zeros(0,2);%??¼k-???????L??i?? 
bordercount = 0;%??????¼kborder 
 
%----------????L1----------% 
for i = 1 : size(literals,1) 
    if(literals(i) == 0)%??0???????? 
        continue; 
    end 
    index = find(dataset == literals(i));%?????????litertals(i)??????±? 
    if(size(index,1) >= min_sup)%?????????????? 
        itemtemp = [literals(i),zeros(1, size(literals,1)-1)]; 
        L = [L; itemtemp];%?????? 
        bordercount = bordercount + 1; 
        L1 = [L1; literals(i)];%1-?? 
        supports = [supports; size(index,1)];%1-????????? 
    end 
end   
kborder(1,:) = [1,bordercount]; 
 
%----------????????k-?????----------% 
k = 2;%????????L1????L2 
while(1) 
    KL = L(kborder(k-1,1):kborder(k-1,2),:);%???Lk-1 
    kborder(k,1) = bordercount + 1; %??¼??Lk??L?????'?±? 
    for i = 1 : size(KL,1) - 1%Lk-1???????? 
        for j = i + 1: size(KL,1) 
            if(isequal(KL(i,1:k-2),KL(j,1:k-2)) == 1)%???????????? 
                itemtemp = sort([KL(i,1:k-2),KL(i,k-1),KL(j,k-1)]); 
                if(all(ismember(combnk(itemtemp,k-1),KL(:,1:k-1),'rows')) == 1)%'??apriori???'??--k-???????????k-1-?????????????? 
                    suptemp = CheckSup(dataset,itemtemp);%????????????? 
                    if(suptemp >= min_sup)%??????????? 
                        itemtemp = [itemtemp,zeros(1,size(literals,1)-size(itemtemp,2))];%iß??0 
                        L = [L;itemtemp];%????????? 
                        bordercount = bordercount + 1;%Lk????????+1 
                        supports = [supports;suptemp]; 
                    end 
                end 
            end 
        end 
    end 
    kborder(k,2) = bordercount; 
    if(kborder(k,1) > kborder(k,2)) %??Lk???????????? 
        break; 
    end 
    k = k + 1; 
end 
 
PrintFrequentItemset(L,supports);%?????????????????? 
 
%----------????????????----------% 
rules_left = zeros(0,size(literals,1) - 1);%??????? 
rules_right = zeros(0,size(literals,1) - 1);%???????? 
 
for i = kborder(2,1) : size(L,1)%??k>=2-???????ÿ???????????????? 
    l = nonzeros(L(i,:))'; 
    sup_l = supports(i); 
    for j = 1 : size(l,2) - 1%???????????????1??????????-1?? 
        l_subset = combnk(l,j);%??l??j????????? 
        for k = 1 : size(l_subset,1) 
            s = l_subset(k,:);%???? 
            sup_s = FindSup(s, L, supports);%??????????????? 
            if(sup_l / sup_s >= min_conf)%????????????? 
                ltemp = [s,zeros(1, size(literals,1)-1-size(s,2))]; 
                rules_left = [rules_left; ltemp]; 
                l_s = setdiff(l,s);%?????????-?????????? 
                rtemp = [l_s,zeros(1, size(literals,1)-1-size(l_s,2))]; 
                rules_right = [rules_right; rtemp]; 
            end 
        end 
    end 
end 

//CheckSup.m
function c = CheckSup(dataset, item)%????????????????????????J????? 
 
n = size(dataset,1);%???????? 
c = 0;%???????'?0 
for i=1:n 
    if(all(ismember(item,dataset(i,:))) == 1)%??????????????i?? 
        c = c+1; 
    end 
end 

//main.m

lear; 
clc;  
load 'testdata.mat'%???????????ÿ?????h??????ÿ?????h???? 
PrintTransactions(testdata);%????????? 
min_sup = 2;%??'????????? 
min_conf = 0.7;%??'????????Y? 
[rules_left, rules_right] = Apriori(testdata, min_sup, min_conf);%????Apriori?? 
PrintRules(rules_left, rules_right);%???????????? 

//PrintFrequentItemse.m
function PrintFrequentItemset(L, supports)%??????????????????? 
 
fprintf('---------------------Frequent Itemset|Suppoort--------------------\n'); 
for i =1:size(L,1) 
    fprintf('FI%2d:               ',i); 
    items = nonzeros(L(i,:)); 
    for j=1:size(items,1) 
       fprintf('%d', L(i, j)); 
       if(j == size(items,1)) 
           fprintf('|support:'); 
       else 
           fprintf(', ');  
       end            
    end 
    fprintf('%d\n', supports(i));  
end 
 
fprintf('------------------------------------------------------------------\n\n');

//PrintRules.m
function PrintRules(rules_left, rules_right)%??????????? 
 
 
fprintf('-------------------------------Rules------------------------------\n'); 
for i =1:size(rules_left,1) 
    fprintf('R%2d:                ',i); 
    items = nonzeros(rules_left(i,:));%????????? 
    for j=1:size(items,1) 
       fprintf('%d', rules_left(i, j)); 
       if(j == size(items,1)) 
           fprintf(' ==> '); 
       else 
           fprintf(', ');  
       end            
    end 
     
    items = nonzeros(rules_right(i,:));%?????????? 
    for j=1:size(items,1) 
       fprintf('%d', rules_right(i, j)); 
       if(j == size(items,1)) 
           fprintf('\n'); 
       else 
           fprintf(', ');  
       end            
    end 
end 
 
fprintf('------------------------------------------------------------------\n\n');

//PrintTransaction.m
function PrintTransactions(dataset)%??????? 
 
fprintf('-------------------------Transaction List-------------------------\n'); 
for i =1:size(dataset,1)%????????????????????????????????i?????? 
    fprintf('T%2d:                ',i); 
    items = nonzeros(dataset(i,:));%????????????????ÿ??k??????? 
    %?????????? 
    for j=1:size(items,1)%??j?? 
       fprintf('%d', dataset(i, j)); 
       if(j == size(items,1)) 
           fprintf('\n'); 
       else 
           fprintf(', ');  
       end            
    end     
end 
 
fprintf('------------------------------------------------------------------\n\n');
     